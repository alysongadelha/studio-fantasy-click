import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { Tab } from "@headlessui/react";
import classNames from "classnames";
import nodeFetch from "node-fetch";
import bgImagem from "../../public/photography-bg.jpg";
import { GetStaticProps } from "next";
import { createApi } from "unsplash-js";
import type { Photo } from "@/models/Photo";
import type { Tabs } from "@/models/Tabs";
import { Gallery } from "@/components/Gallery";
import { getImages } from "@/utils/image-util";

type HomeProps = {
  oceans: Photo[];
  forests: Photo[];
};

export default function Home({ oceans, forests }: HomeProps) {
  const tabs: Tabs[] = [
    { key: "all", display: "All" },
    { key: "oceans", display: "Oceans" },
    { key: "forest", display: "Forest" },
  ];
  return (
    <div className="h-full overflow-auto">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Image
        className="fixed left-0 top-0 z-0"
        src={bgImagem}
        alt="background-image"
        placeholder="blur"
      />
      <div className="fixed left-0 top-0 w-full h-full z-10 from-stone-900 bg-gradient-to-t"></div>
      <header className="bg-stone-900 fixed top-0 w-full z-30 flex justify-between items-center h-[90px] px-10">
        <span className="uppercase text-lg font-medium">
          Photography Portfolio
        </span>
        <Link
          onClick={() => console.log("Send to WhatsApp")}
          href="#"
          className="rounded-3xl bg-white text-stone-700 px-3 py-2 hover:bg-opacity-90"
        >
          Get in touch
        </Link>
      </header>
      <main className="relative pt-[110px] z-20">
        <div className="flex flex-col items-center h-full">
          <Tab.Group>
            <Tab.List className="flex items-center gap-12">
              {tabs.map(({ key, display }) => (
                <Tab key={key} className="p-2 uppercase">
                  {({ selected }) => (
                    <span
                      className={classNames(
                        "uppercase text-lg",
                        selected ? "text-white" : "text-stone-600"
                      )}
                    >
                      {display}
                    </span>
                  )}
                </Tab>
              ))}
            </Tab.List>
            <Tab.Panels className="h-full max-w-[900px] w-full p-2 sm:p-4 my-6">
              <Tab.Panel className="overflow-auto">
                <Gallery photos={[...oceans, ...forests]} />
              </Tab.Panel>
              <Tab.Panel>
                <Gallery photos={[...oceans]} />
              </Tab.Panel>
              <Tab.Panel>
                <Gallery photos={forests} />
              </Tab.Panel>
            </Tab.Panels>
          </Tab.Group>
        </div>
      </main>
      <footer className="relative h-[90px] flex justify-center items-center uppercase text-lg font-medium z-20">
        <p>Photography Portfolio</p>
      </footer>
    </div>
  );
}

export const getStaticProps: GetStaticProps<HomeProps> = async () => {
  const unsplash = createApi({
    accessKey: process.env.UNSPLASH_ACCESS_KEY!,
    fetch: nodeFetch as unknown as typeof fetch,
  });

  const [oceans, forests] = await Promise.all([
    getImages(unsplash, "oceans"),
    getImages(unsplash, "forests"),
  ]);

  //   const photos = imagesMock;

  return {
    props: {
      oceans,
      forests,
    },
  };
};
